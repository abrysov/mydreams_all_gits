- if dream.nil?
  .card.fake-card
- else
  - dreambook ||= false
  - dream_certificate = dream.summary_certificate_type_name || 'My Dreams'

  .card.card-hover.js-flip.js-card-hover{class: "#{'logged' if dreamer_signed_in?} #{'fulfilled-dream' if dream.came_true?}", data: {type: 'dream', 'dream-type' => dream_certificate}}
    .card__wrap.flip
      .card_back
        .card_back__wrap
          .logo_color
      .card_front
        .private-icon.small.js-private-icon{ class: "#{'active' if dream.restriction_level != 0}" }

        .card_dream__header.group
          .card_dream__header__status
            %span= dream_certificate

        - show_link = dream.type.nil? ? [:account, dream] : dream

        .card_dream__img{ class: "#{'not-owner' if can?(:take, dream)}" }
          - if dream.photo.present?
            = image_tag dream.photo.url(:medium)

          - if dreamer_signed_in?
            .card-ctrls.group
              = render partial: 'account/dreams/card_ctrls', locals: {dream: dream}


        - if dreambook
          = link_to show_link, {data: {push: 'true', target: '#js-ajax-content'}} do
            .card_dream__name
              %span= dream.title

            .card_dream__description
              %p= dream.description

        - else
          = link_to show_link do
            .card_dream__name
              %span= dream.title

            .card_dream__description
              %p= dream.description

        .card_dream__footer
          .additional_data.group
            = render 'shared/like_button', object: dream, card_version: true
            - if dreamer_signed_in?
              .additional_data__starts{ class: "#{(dream.certificates.count == 0) ? 'empty' : 'js-tooltipster'}", data: {'t-position' => 'bottom', 't-width' => '300', 't-interactive' => 'true'} }
                %span.js-starts-btn-count= dream_launches dream
                .bubble.js-tooltipster-content
                  .bubble-wrap
                    .bubble_counter.js-bubble-counter
                      #{dream.paid_certificates.count} #{custom_pluralize(dream.paid_certificates.count, 'marks')}
                    .bubble_items.js-bubble_items
                      .tooltip-certificates
                        - dream.paid_certificates.last(5).each do |c|
                          .tooltip-certificate
                            .certificate-image.certificate-small{ data: {'dream-type' => "#{c.certificate_type.try(:name)}"} }
                    .bubble_link{ class: "#{'active' if dream.certificates.count > 5}" }
                      = link_to t("dreams.popup.show_all"), modal_certificates_path(entity_type: dream.class.to_s.underscore, entity_id: dream.id), {remote: true, data: {'modal-type' => 'certificates', 'jmod-width' => '320'}, class: 'jmod-btn'}


              .additional_data__comments{ class: "#{(dream.comments_count == 0) ? 'empty' : 'js-tooltipster'}", data: {'t-target' => 'comments', 't-position' => 'bottom', 't-width' => '300', 't-interactive' => 'true'} }
                %span.js-comments-btn-count= number_to_human(dream.comments_count, format: '%n%u', strip_insignificant_zeros: true, units: { thousand: 'K' })
                .bubble.js-tooltipster-content
                  .bubble-wrap
                    .bubble_counter.js-bubble-counter
                      #{dream.comments_count} #{custom_pluralize(dream.comments_count, 'comments')}
                    .bubble_items.js-bubble_items
                      - dream.last_comments.limit(5).each do |comment|
                        = link_to [:account, dream] do
                          = image_tag avatar_or_default(comment.dreamer, :small)
                    .bubble_link{ class: "#{'active' if dream.comments_count > 5}" }
                      = link_to t("dreams.popup.show_all"), modal_commentators_path(entity_type: dream.class.to_s.underscore, entity_id: dream.id), {remote: true, data: {'modal-type' => 'commentators_list', 'jmod-width' => '320'}, class: 'jmod-btn'}


            - else

              = link_to modal_authorization_path, class: "empty additional_data__starts jmod-btn", remote: true, data: {"jmod-width" => "410px", "modal-type" => "authorization"} do
                %span.js-starts-btn-count= dream_launches dream

              = link_to modal_authorization_path, class: "empty additional_data__comments jmod-btn", remote: true, data: {"jmod-width" => "410px", "modal-type" => "authorization"} do
                %span.js-comments-btn-count= number_to_human(dream.comments_count, format: '%n%u', strip_insignificant_zeros: true, units: { thousand: 'K' })
